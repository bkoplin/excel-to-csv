{
  // Disable the default formatter, use eslint instead
  "prettier.enable": false,
  "editor.formatOnSave": false,

  // Auto fix
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },

  // Silent the stylistic rules in you IDE, but still auto fix them
  "eslint.rules.customizations": [
    { "rule": "style/*", "severity": "off", "fixable": true },
    { "rule": "antfu/*", "severity": "off", "fixable": true },
    { "rule": "*-indent", "severity": "off", "fixable": true },
    { "rule": "*-spacing", "severity": "off", "fixable": true },
    { "rule": "*-spaces", "severity": "off", "fixable": true },
    { "rule": "*-order", "severity": "off", "fixable": true },
    { "rule": "*-dangle", "severity": "off", "fixable": true },
    { "rule": "*-newline", "severity": "off", "fixable": true },
    { "rule": "*quotes", "severity": "off", "fixable": true },
    { "rule": "*semi", "severity": "off", "fixable": true }
  ],

  // Enable eslint for all supported languages
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml"
  ],
  "gitlens.experimental.generateCommitMessagePrompt": "Now, please generate a commit message. Prefix the commit message with a semantic versioning label like \"feat,\" \"chore,\" \"fix,\" etc. If the changes in any of the files change the inputs, arguments, or outputs of any functions in the files, the prefix should be followed with an exclamation point to indicate that the changes are breaking changes. Ensure that the commit message is a precise and informative subject line that succinctly summarizes the crux of the changes in under 75 characters. Do not use phrases like \"this commit\", \"this change\", etc.   Follow with a newline and an explanatory body that is a markdown-syntax unordered list providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. When listing the changes, group the changes by file if more than one file has changed. When listing by file, use the relative path from the project root as a bullet, then indent and list the major changes to the file.   Conclude with any relevant issue references at the end of the message.",
  "files.exclude": {
    "**/.git": false,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true
  },
  "explorerExclude.backup": {},
  "eslint.codeActionsOnSave.mode": "all",
  "editor.wordWrap": "on",
  "typescript.tsdk": "node_modules/typescript/lib"
}
